name: disposables

packages:
  - packages/**

scripts:

  analyze:
    run: |
      flutter pub global run melos exec -c 1 --ignore="*example*" -- \
      flutter analyze --fatal-infos .
    description: |
      Format code all lints from analysis_options.yaml

  analyze:find_unused_files:
    run: |
      flutter pub global run melos exec -c 1 --ignore="*example*" -- \
      flutter pub run dart_code_metrics:metrics check-unused-files lib
    description: |
      Find all unused files

  format:
    run: |
      flutter pub global run melos exec -c 5 --ignore="*example*" -- \
      flutter format .
    description: |
      Format code

  format:check:
    run: |
      flutter pub global run melos exec -c 5 --ignore="*example*" -- \
      flutter format --set-exit-if-changed --dry-run .
    description: |
      Check is code properly formatted

  generate:build_runner:
    run: |
      flutter pub global run melos exec -c 1 --fail-fast --depends-on="build_runner" -- \
      "flutter pub run build_runner build --delete-conflicting-outputs"
    description: Generate all code via build_runner tasks(moor, freezed, json, etc)

  test:unit:
    run: flutter pub global run melos exec -c 1 --fail-fast -- \
      flutter test
    description: Run Flutter tests for a specific package in this project.
    select-package:
      dir-exists: test

  refresh:
    run: |
      flutter pub global run melos run clean && \
      flutter pub global run melos run get
    description: Clear all possible things

  clean:
    run: flutter pub global run melos exec -c 1 flutter clean
    description: Clear all packages

  get:
    run: flutter pub global run melos exec -c 1 flutter pub get
    description:  Get all packages
